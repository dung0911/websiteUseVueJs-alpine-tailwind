@page "/forgot-password"

<PageTitle Title="CUser - Forgot Password" />

@using System.ComponentModel.DataAnnotations;
@using Jexpa.Core;
@using Jexpa.Core.Legacy;
@inject NavigationManager NavigationManager;

<section class="min-h-screen flex flex-col">
    <div class="flex flex-1 items-center justify-center">
        <div class="rounded-lg sm:border-2 px-4 lg:px-24 py-16 lg:max-w-xl sm:max-w-md w-full text-center">
            <div class="text-center">
                <h1 class="font-bold tracking-wider text-xl mb-2 w-full text-gray-600">
                    Reset your password
                </h1>
                @if (string.IsNullOrEmpty(token))
                {
                    <p class="mb-4">Enter your email address</p>
                    <div class="py-2 text-left text-red-500 font-semibold">
                        @errorMarkup
                    </div>
                    <div class="py-2 text-left">
                        <input type="email" name="email" placeholder="Email" @bind-value="email"
                           class="border-2 border-gray-100 focus:outline-none bg-gray-100 block w-full py-2 px-4 rounded-lg focus:border-gray-700" />
                    </div>
                    <div class="py-2">
                        <button class="border-2 border-gray-100 focus:outline-none bg-purple-600 text-white font-bold tracking-wider block w-full p-2 rounded-lg focus:border-gray-700 hover:bg-purple-700"
                            @onclick="SendForgotPasswordEmail">
                            Continue
                        </button>
                    </div>
                }
                else
                {
                    <p class="p-2 font-semibold">The reset password link has been sent to your mail.</p>
                }
            </div>
        </div>
    </div>
</section>


@code {
    private string token = string.Empty;
    private string email = string.Empty;
    private string brandUrl = string.Empty;
    private MarkupString errorMarkup = (MarkupString)string.Empty;
    private bool GenerateResetToken()
    {
        string errorInfo = string.Empty;
        if (string.IsNullOrEmpty(email))
        {
            errorInfo = "<p>Please enter your email address.</p>";
        }
        else if (!(new EmailAddressAttribute().IsValid(email)))
        {
            errorInfo = "<p>Please enter a valid email address.</p>";
        }
        else
        {
            token = CUser.GenerateResetPasswordToken(brandUrl, email);
            if (string.IsNullOrEmpty(token))
            {
                errorInfo += "<p>There was an error generating your reset token. Please try again later.</p>";
            }
        }

        if (!string.IsNullOrEmpty(errorInfo))
        {
            errorMarkup = (MarkupString)errorInfo;
            return false;
        }
        return true;
    }

    private void SendForgotPasswordEmail()
    {
        if (GenerateResetToken())
        {
            if (string.IsNullOrEmpty(token) || string.IsNullOrEmpty(email))
                return;
            string nickname = CUser.GetByEmail(brandUrl, email).GetNickName();
            var templateDictionary = new Dictionary<string, object>
            {
                { "BrandUrl", NavigationManager.BaseUri },
                { "NickName", nickname },
                { "ResetPasswordLink", GetResetPasswordUrl() }
            };
            var cBrand = CBrand.Get(brandUrl);
            CMail cMail = new CMail();
            cMail.AddFrom(cBrand.GetEmailSupportTitle(), cBrand.GetEmailSupport());
            cMail.AddTo(nickname, email);
            cMail.LoadFromPattern(EmailPatternCode.ForgetPassword, CountryCode.US, templateDictionary);
            cMail.Send();
        }
    }

    private string GetResetPasswordUrl()
    {
        return $"{NavigationManager.BaseUri}reset-password?email={email}&token={Uri.EscapeDataString(token)}";
    }
}